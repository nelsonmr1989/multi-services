# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    authorize_login_id: '%env(AUTHORIZE_NET_API_LOGIN_ID)%'
    authorize_transaction_key: '%env(AUTHORIZE_NET_TRANSACTION_KEY)%'
    authorize_mode: '%env(AUTHORIZE_NET_MODE)%'
    app_name: 'Multi-Services'
    web_url: '%env(WEB_URL)%'
    product_provider_url: '%env(PRODUCT_PROVIDER_URL)%'
    batch_size: 50

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Listener\Exception\HandlerExceptionListener:
        arguments:
            - '@service_container'
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }

    App\Listener\Doctrine\DoctrineListener:
        tags:
            - { name: 'doctrine.event_listener', event: 'onFlush' }

    App\Listener\JWT\AuthenticationSuccessListener:
        arguments: [ '@doctrine.orm.default_entity_manager' ]
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }
