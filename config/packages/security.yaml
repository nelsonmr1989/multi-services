security:
    enable_authenticator_manager: true
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    providers:
        app_user_provider:
            chain:
                providers: [ db_username, db_email, db_phone_number ]
        db_username:
            entity:
                class: App\Entity\User
                property: username
        db_email:
            entity:
                class: App\Entity\User
                property: email
        db_phone_number:
            entity:
                class: App\Entity\User
                property: phoneNumber
    firewalls:
        login:
            pattern: ^/login
            stateless: true
            user_checker: App\Security\UserChecker
            provider: app_user_provider
            json_login:
                check_path: /login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api_token_refresh:
            pattern: ^/token
            stateless: true
            provider: app_user_provider
            refresh_jwt: ~
        api:
            pattern: ^/
            stateless: true
            provider: app_user_provider
            jwt: ~

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/v1/pub/rsc,   roles: PUBLIC_ACCESS }
        - { path: ^/v1/users/register, roles: PUBLIC_ACCESS }
        - { path: ^/v1/users/(activate|token/invalidate), roles: PUBLIC_ACCESS }
        - { path: ^/v1, roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
